{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Account.svelte",
    "../../AccountEditor.svelte",
    "../../App.svelte",
    "../../ChangePassword.svelte",
    "../../Field.svelte",
    "../../ImagePicker.svelte",
    "../../Include.svelte",
    "../../LockScreen.svelte",
    "../../Menu.svelte",
    "../../Navbar.svelte",
    "../../Sortablegrid.svelte",
    "../../Wallet.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Include from './Include.svelte';\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\texport let account;\n\n\tlet editingFolder = false;\n    let editFolderNameElement;\n\n\tfunction copyField (event) {\n\t\tlet field = event.currentTarget.getAttribute('field');\n\t}\n\n\tfunction saveFolder() {\n\t\teditingFolder = false;\n\t\tdispatch('save_folder', account);\n\t}\n\n</script>\n\n<div class=\"account\" on:click={() => dispatch('click')}>\n\t<div class=\"card\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"image\">\n\t\t\t\t<img src={account.icon} alt=\"Account\"/>\n\t\t\t</div>\n\t\t\t<h5>{account.name}</h5>\n\t\t</div>\n\t</div>\n\t<div class=\"strength\" style=\"--force: {account.force || 0}\"/>\n</div>\n\n<style>\n\t.account {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\twidth: 180px;\n\t\theight: 70px;\n\t\tmargin: 10px;\n\t\tcursor: pointer;\n\t}\n\n    .account:hover {\n        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n    }\n\n\t.card {\n\t\tpadding: 0;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbackground-color: var(--account-background);\n\t\tborder: 1px solid var(--background);\n\t\tborder-radius: 2px;\n\t\ttransition: 0.1s;\n\t\tbox-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n\t\twidth: 180px;\n\t\theight: 70px;\n\t\tmargin: 0;\n        overflow: hidden;\n        box-sizing: border-box;\n\t}\n\n\t.row {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\th5 {\n\t\tfont-size: 1.2em;\n\t}\n\n\t.image {\n\t\tmargin-right: 10px;\n\t}\n\n\t.image * {\n\t\twidth: 30px;\n\t\tmax-height: 30px;\n\t\tfill: var(--background);\n\t}\n\n\t.strength {\n\t\tfloat: right;\n\t\tmargin-top: -30px;\n\n\t\tdisplay: block;\n\t\tcursor: pointer;\n        /* Set in HTML */\n        /* --force: 90; */\n        --red: calc(255 * ((100 - var(--force)) / 100));\n        --green: calc(255 * var(--force) / 100);\n        width: 30px;\n        height: 30px;\n        background-image: linear-gradient(to bottom right, RGBA(var(--red), var(--green), 0, 0) 50%, RGBA(var(--red), var(--green), 0, 1));\n\t}\n    :global(.drag_over) .account {\n    \tcolor: var(--accent);\n        border: 1px solid var(--accent);\n    }\n\n    .edit {\n        opacity: 0;\n    \twidth: 15px;\n    \theight: 15px;\n    \tfloat: right;\n    \tmargin-top: -20px;\n    \tmargin-left: 150px;\n        transition: 0.2s;\n    }\n\n    .account:hover .edit{\n        opacity: 1;\n    }\n\n    .edit_folder_name {\n    \theight: 25px;\n    }\n\n    img {\n        pointer-events: none;\n    }\n\n</style>\n",
    "<script>\n    import { Textfield, Button, Icon, Menu, Menuitem, Dialog } from 'svelte-mui';\n    import Field from './Field.svelte';\n    import ImagePicker from './ImagePicker.svelte';\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let account = null;\n    export let readonly = 0;\n\n    let totpCode = null;\n    let qrCodeVisible = false;\n\n    $: passwordStrength = (account && account.password) ? 'Strength: ' + account.password.length : '';\n    $: totpMessage = totpCode ? (totpCode + ' (' + time + ')') : '';\n\n    let time = 30;\n\n    let editedFieldIndex = -1;\n    $: visibleFieldNameModal = editedFieldIndex >= 0;\n\n    async function updateTotp () {\n        let timestamp = Math.floor(Date.now() / 1000);\n\n        if (account && account.totp && account.totp.length) {\n            if (timestamp % 30 === 0 || !totpCode) {\n                let response = await fetch(\"/totp?code=\" + encodeURIComponent(account.totp))\n                if (response.ok) {\n                    totpCode = await response.text();\n                }\n            }\n        }\n\n        time = 30 - timestamp % 30;\n        setTimeout(updateTotp, 1000);\n    }\n    updateTotp();\n\n    function edit (accountEdited) {\n        readonly = 0;\n        qrCodeVisible = false;\n        totpCode = null;\n    }\n\n    function save () {\n        dispatch('save_account', {account: account});\n        readonly = 1;\n        qrCodeVisible = false;\n        totpCode = null;\n    }\n\n    export function editAccount (accountEdited, read=true) {\n        readonly = 1;\n        account = JSON.parse(JSON.stringify(accountEdited));;\n    }\n\n    export function newAccount (newAccount) {\n        readonly = 0;\n        qrCodeVisible = false;\n        totpCode = null;\n        account = newAccount;\n    }\n\n    function newField () {\n        if (!account.fields) {\n            account.fields = [];\n        }\n        account.fields = account.fields.concat({\n            name: 'Field',\n            type: 'text',\n            value: '',\n        });\n    }\n\n    function removeField(event) {\n        let index = event.detail;\n        account.fields.splice(index, 1);\n        account.fields = account.fields;\n    }\n\n    function editFieldName (event) {\n        editedFieldIndex = event.detail;\n    }\n\n    function onKeyPressFieldLabel (e) {\n        if (!e) e = window.event;\n        if ((e.keyCode || e.which) == 13) {\n            editedFieldIndex = -1;\n            return false;\n        }\n    }\n\n    export function reset () {\n        account = null;\n        qrCodeVisible = false;\n        totpCode = null;\n    }\n\n    async function showQrCode () {\n        qrCodeVisible = true;\n        setTimeout(() => {\n            var qr = new QRious({\n              element: document.getElementById('qr_code_canvas'),\n              value: 'otpauth://totp/' + encodeURIComponent(account.name) + ':' + encodeURIComponent(account.login) + '?secret=' + encodeURIComponent(account.totp) + '&issuer=' + encodeURIComponent(account.name)\n            });\n        });\n    }\n\n</script>\n\n{#if account}\n<div class=\"account\">\n    <div class=\"fields\">\n        <ImagePicker bind:src={account.icon} bind:readonly size=\"100px\"/>\n\n        <Field label=\"Name\" bind:value={account.name} bind:readonly/>\n        <Field label=\"Login\" bind:value={account.login} bind:readonly/>\n        <Field label=\"Password\" bind:value={account.password} bind:readonly bind:message={passwordStrength} type=\"password\"/>\n        <Field label=\"URL\" bind:value={account.url} bind:readonly type=\"url\"/>\n        <Field label=\"2FA\" bind:value={account.totp} bind:readonly type=\"totp\" bind:message={totpMessage} on:show_qrcode={showQrCode}/>\n\n\n        {#each account.fields || [] as field, i}\n            <Field bind:label={field.name} bind:value={field.value} bind:readonly bind:type={field.type} index={i} canEditType=\"1\" on:removefield={removeField} on:edit_field_name={editFieldName}/>\n        {/each}\n\n        {#if !readonly}\n            <Button on:click={newField}>New field</Button>\n        {/if}\n    </div>\n\n    {#if readonly}\n        <Button class=\"save_account\" raised icon on:click={edit}>\n            <Icon color=\"accent\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n            </Icon>\n        </Button>\n    {:else}\n        <Button class=\"save_account\" raised icon on:click={save}>\n            <Icon path=\"M1 14 L5 10 L13 18 L27 4 L31 8 L13 26 z\" viewBox=\"0 0 32 32\" color=\"accent\"/>\n        </Button>\n    {/if}\n</div>\n\n<Dialog width=\"290\" bind:visible={qrCodeVisible}>\n    <div slot=\"title\">2FA QR Code</div>\n    <p>Scan this QR Code with Google Authenticator, FreeOTP...</p>\n    <canvas id=\"qr_code_canvas\"></canvas>\n</Dialog>\n\n<Dialog width=\"290\" bind:visible={visibleFieldNameModal}>\n    <Textfield label=\"Label\" bind:value={account.fields[editedFieldIndex].name} on:keypress={onKeyPressFieldLabel}/>\n</Dialog>\n\n{/if}\n\n<style lang=\"less\">\n    .account {\n        padding: 20px;\n        color: var(--color);\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        align-items: center;\n        overflow-y: auto;\n        box-sizing: border-box;\n    }\n\n    .fields {\n        width: 90%;\n        max-height: 100%;\n        overflow-y: auto;\n        text-align: center;\n    }\n\n    :global(.save_account) {\n        position: absolute!important;\n        bottom: 20px;\n        right: 20px;\n    }\n\n    .field {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        height: 72px;\n    }\n\n    #qr_code_canvas {\n        width: 250px;\n        height: 250px;\n    }\n\n</style>\n",
    "<script>\n    import Wallet from './Wallet.svelte';\n    import LockScreen from './LockScreen.svelte';\n    import { flip } from 'svelte/animate';\n\n    let wallet = [];\n    let locked = true;\n    let walletElement;\n\n    function openWallet (event) {\n        locked = false;\n        setTimeout(() => {\n            // do after the DOM is updated\n            walletElement.openFolder(getCookie('currentFolderId') || 0);\n        });\n    }\n\n    function getCookie(name) {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n        if (parts.length === 2) return parts.pop().split(';').shift();\n    }\n\n    async function lock () {\n        await fetch('/logout');\n        locked = true;\n        wallet = [];\n    }\n</script>\n\n<svelte:head>\n    <script src=\"/lib/qrious.min.js\"></script>\n</svelte:head>\n\n<div class=\"root\">\n    {#if locked}\n    <LockScreen on:open_wallet={openWallet}/>\n    {:else}\n    <Wallet wallet={wallet} on:lock={lock} bind:this={walletElement}/>\n    {/if}\n</div>\n\n<style lang=\"less\">\n    @font-face {\n        font-family: 'Open Sans';\n        font-style: normal;\n        font-weight: 400;\n        src: url('/font/OpenSans-Regular.ttf');\n    }\n    :global(*) {\n        /* Svelte MUI */\n        --color: #688c89;\n        --label: #688c89;\n        --primary: #C876E0;\n        --background: #272B34;\n        --accent:  #C876E0;\n\n        /* Other colors */\n        --link-color: #1976d2;\n        --error-color: #e53935;\n        --wallet-background: #FCFCFC;\n        --account-background: #FFF;\n\n        transition-timing-function: ease;\n        user-select: none;\n    }\n\n    :global(html),\n    :global(body) {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n    }\n\n    .root {\n        font-family: 'Open Sans';\n        font-size: 15px;\n        height: 100vh;\n        width: 100vw;\n        margin: 0;\n        overflow: hidden;\n        overflow-x: hidden;\n    }\n\n    .wallet {\n        height: calc(100% - 3em);\n        overflow-y: scroll;\n    }\n\n    /* Scroll bar */\n    :global(::-webkit-scrollbar) {\n        width: 6px;\n    }\n\n    /* Track */\n    :global(::-webkit-scrollbar-track) {\n\n    }\n\n    /* Handle */\n    :global(::-webkit-scrollbar-thumb) {\n        background: var(--background);\n    }\n\n    /* Handle on hover */\n    :global(::-webkit-scrollbar-thumb:hover) {\n        background: var(--background);\n    }\n</style>\n",
    "<script>\n    import { Textfield, Button, Icon, Dialog } from 'svelte-mui';\n    import Field from './Field.svelte';\n\n    export let visible = false;\n\n    let oldPassword = '';\n    let newPassword = '';\n    let confirmPassword = '';\n\n    let error = false;\n\n    $: canSubmit = newPassword && newPassword === confirmPassword;\n\n    async function changePassword () {\n        let response = await fetch('/change_password', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json;'},\n            body: JSON.stringify({old_password: oldPassword, new_password: newPassword})\n        })\n\n        if (response.ok) {\n            visible = false;\n        } else {\n            error = true;\n        }\n\n    }\n\n</script>\n\n<Dialog width=\"290\" bind:visible>\n    <div slot=\"title\">New password!</div>\n\n    <Field label=\"Old password\" type=\"password\" bind:value={oldPassword} copy=\"0\"/>\n    <Field label=\"New password\" type=\"password\" bind:value={newPassword} copy=\"0\"/>\n    <Field label=\"Confirm\" type=\"password\" bind:value={confirmPassword} copy=\"0\"/>\n\n    <div slot=\"actions\" class=\"actions center\">\n        {#if canSubmit}\n        <Button color=\"primary\" raised on:click={changePassword}>\n            Change\n            <Icon style=\"margin-left: 5px\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\n                    <path d=\"M618.9,438.7c35.8,0,64.8,31.6,64.8,70.7v164.9c0,39-29,70.7-64.8,70.7H381.3c-35.8,0-64.8-31.6-64.8-70.7V509.4c0-39,29-70.7,64.8-70.7h57.5l0,0h122.5l0,0H618.9z M499.5,500.2c-33.8,0-61.3,26.2-61.3,58.6c0,21.6,16.8,38.2,35,48.3v76.1h52.5v-76.1c18.3-10.2,35-26.7,35-48.3C560.8,526.4,533.4,500.2,499.5,500.2z M500,316.3c-57.6,0-61.1,48.4-61.3,61.3v61.1h-61.6v-55.2c0,0,0-128.6,122.7-128.6c122.7,0,122.7,128.6,122.7,128.6v55.2h-61.2v-61.1C561.1,365,557.6,316.3,500,316.3z M500,990.1c-270.6,0-490-219.4-490-490c0-270.6,219.4-490,490-490c87.2,0,169,22.9,240,62.9l45.6-63.1l81.6,214.5L653.2,193l50.5-69.9C643.1,90.3,573.8,71.4,500,71.4c-236.8,0-428.8,192-428.8,428.8c0,236.8,192,428.7,428.8,428.7c236.8,0,428.8-192,428.8-428.7c0-57.8-11.6-112.9-32.3-163.2l56.6-23.3c23.7,57.5,37,120.4,37,186.5C990,770.7,770.6,990.1,500,990.1z\"/>\n                </svg>\n            </Icon>\n        </Button>\n        {/if}\n    </div>\n    {#if error}\n        <div class=\"error\">Wrong password !</div>\n    {/if}\n</Dialog>\n\n\n<style>\n    .error {\n        text-align: center;\n        color: var(--error-color);\n    }\n</style>\n",
    "<script>\n    import { Textfield, Button, Icon, Menu, Menuitem } from 'svelte-mui';\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let label = '';\n    export let readonly = 0;\n    export let type = 'text';\n    export let value = '';\n    export let message = null;\n    export let copy = 1;\n\n    export let canEditType = false;\n\n    export let index = 0;\n\n    export let passwordVisible = false;\n\n    $: computedType = passwordVisible ? 'text' : type;\n\n    function copyValue (str) {\n        const el = document.createElement('textarea');\n        // clear the clipboard with space if nothing\n        el.value = str || ' ';\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n</script>\n\n{#if value || !readonly}\n<div class=\"field\">\n    {#if readonly}\n        <div class=\"label\">{label}</div>\n    {/if}\n    <div class=\"content\">\n        {#if readonly}\n            {#if type === 'url' && value.startsWith('http')}\n                <a class=\"value\" href={value}>{value}</a>\n            {:else if type === 'password' && !passwordVisible}\n                <div class=\"value\">{'•••••••••' }</div>\n            {:else if type === 'totp'}\n                <div class=\"value\">{message}</div>\n            {:else}\n                <div class=\"value\">{value}</div>\n            {/if}\n        {:else}\n            <Textfield bind:label bind:value bind:message bind:type={computedType} messagePersist=\"1\"/>\n        {/if}\n\n        {#if type === 'password'}\n            <Button on:click={() => {passwordVisible = !passwordVisible}}>\n                {#if passwordVisible}\n                    <Icon path=\"M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z\"/>\n                {:else}\n                    <Icon path=\"M12 6c3.79 0 7.17 2.13 8.82 5.5-.59 1.22-1.42 2.27-2.41 3.12l1.41 1.41c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l1.65 1.65C10.66 6.09 11.32 6 12 6zm-1.07 1.14L13 9.21c.57.25 1.03.71 1.28 1.28l2.07 2.07c.08-.34.14-.7.14-1.07C16.5 9.01 14.48 7 12 7c-.37 0-.72.05-1.07.14zM2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.98-.29 4.32-.82l3.42 3.42 1.41-1.41L3.42 2.45 2.01 3.87zm7.5 7.5l2.61 2.61c-.04.01-.08.02-.12.02-1.38 0-2.5-1.12-2.5-2.5 0-.05.01-.08.01-.13zm-3.4-3.4l1.75 1.75c-.23.55-.36 1.15-.36 1.78 0 2.48 2.02 4.5 4.5 4.5.63 0 1.23-.13 1.77-.36l.98.98c-.88.24-1.8.38-2.75.38-3.79 0-7.17-2.13-8.82-5.5.7-1.43 1.72-2.61 2.93-3.53z\"/>\n                {/if}\n            </Button>\n        {:else if type === 'totp' && value}\n            <Button on:click={() => {dispatch('show_qrcode')}}>\n                <Icon viewBox=\"0 0 1792 1792\" path=\"M576 1152v128h-128v-128h128zm0-768v128h-128v-128h128zm768 0v128h-128v-128h128zm-1024 1023h384v-383h-384v383zm0-767h384v-384h-384v384zm768 0h384v-384h-384v384zm-256 256v640h-640v-640h640zm512 512v128h-128v-128h128zm256 0v128h-128v-128h128zm0-512v384h-384v-128h-128v384h-128v-640h384v128h128v-128h128zm-768-768v640h-640v-640h640zm768 0v640h-640v-640h640z\"/>\n            </Button>\n        {/if}\n\n        {#if canEditType && !readonly}\n            <Menu width=\"10px\" origin=\"top right\">\n                <div slot=\"activator\">\n                    <Button>\n                        {#if type === 'text'}\n                            <Icon path=\"M5 4v3h5.5v12h3V7H19V4z\"/>\n                        {:else if type === 'url'}\n                            <Icon>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/></svg>\n                            </Icon>\n                        {:else}\n                            <Icon path=\"M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\n                        {/if}\n                    </Button>\n                </div>\n                <Menuitem on:click={() => {type = 'text'}}>\n                    <Button>\n                        <Icon path=\"M5 4v3h5.5v12h3V7H19V4z\"/>\n                    </Button>\n                </Menuitem>\n                <Menuitem on:click={() => {type = 'password'}}>\n                    <Button>\n                        <Icon path=\"M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\n                    </Button>\n                </Menuitem>\n                <Menuitem on:click={() => {type = 'url'}}>\n                    <Button>\n                        <Icon>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/></svg>\n                        </Icon>\n                    </Button>\n                </Menuitem>\n                <Menuitem on:click={() => {dispatch('removefield', index)}}>\n                    <Button>\n                        <Icon path=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"/>\n                    </Button>\n                </Menuitem>\n                <Menuitem on:click={() => {dispatch('edit_field_name', index)}}>\n                    <Button>\n                        <Icon>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n                        </Icon>\n                    </Button>\n                </Menuitem>\n            </Menu>\n        {/if}\n        {#if parseInt(copy)}\n            <Button on:click={() => {copyValue(value)}}>\n                <Icon>\n                    <svg height=\"48\" viewBox=\"0 0 48 48\" width=\"48\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0h48v48h-48z\" fill=\"none\"/><path d=\"M32 2h-24c-2.21 0-4 1.79-4 4v28h4v-28h24v-4zm6 8h-22c-2.21 0-4 1.79-4 4v28c0 2.21 1.79 4 4 4h22c2.21 0 4-1.79 4-4v-28c0-2.21-1.79-4-4-4zm0 32h-22v-28h22v28z\"/></svg>\n                </Icon>\n            </Button>\n        {/if}\n    </div>\n</div>\n{/if}\n\n\n<style>\n    .field {\n        height: 72px;\n        width: 100%;\n        text-align: left;\n    }\n\n    .content {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        height: 50px;\n    }\n\n    .label {\n        min-width: 100%;\n        letter-spacing: 0.4px;\n        font-size: 13px;\n        margin-bottom: -6px;\n    }\n\n    .value {\n        width: 100%;\n    }\n\n    .message {\n        font-size: 12px;\n        letter-spacing: 0.4px;\n    }\n\n    a:hover {\n        color: var(--link-color);\n        text-decoration: underline;\n    }\n\n</style>\n",
    "<script>\n    import { Textfield } from 'svelte-mui';\n    import Include from './Include.svelte';\n    import { onMount } from 'svelte';\n\n    export let src;\n    export let chooseIcon = false;\n    export let readonly = false;\n    export let size = \"100px\";\n\n    let srcs = [];\n    let currentSrcs = [];\n    let searchValue = '';\n\n    onMount(async () => {\n        let response = await fetch('/account_icons');\n        srcs = await response.json();\n        currentSrcs = srcs;\n    });\n\n    function open () {\n        chooseIcon = readonly ? false : true;\n    }\n\n    function choose (isrc) {\n        search();\n        searchValue = '';\n\n        src = isrc;\n        chooseIcon = false;\n    }\n\n    function search(event) {\n        if (!event || !searchValue.length) {\n            currentSrcs = srcs;\n        } else {\n            currentSrcs = srcs.filter((url) => {\n                return url.indexOf(searchValue) > 0;\n            });\n        }\n    }\n\n</script>\n\n<div class=\"image_picker\" style=\"--size: {size}\">\n    <div class={readonly ? 'img readonly' : 'img'} on:click={open}>\n        {#if src}\n            <img src={src} alt={src}/>\n        {:else}\n            <Include src='/img/account_default.svg'/>\n        {/if}\n    </div>\n    <div class=\"icons {chooseIcon && !readonly ? 'visible' : ''}\">\n        <div class=\"search\">\n            <Textfield placeholder=\"Search\" width=\"100%\" on:input={search} bind:value={searchValue}/>\n        </div>\n        <div class=\"container\">\n            {#each currentSrcs as src}\n                <img src={src} on:click={() => {choose(src)}} alt={src}/>\n            {/each}\n        </div>\n    </div>\n</div>\n\n<style>\n    .image_picker {\n        width: 100%;\n        max-height: 100%;\n    }\n\n    .img {\n        cursor: pointer;\n        width: var(--size);\n        margin: auto;\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n    .image_picker :global(svg),\n    img {\n        max-width: 100%;\n        max-height: 100%;\n        height: var(--size);;\n        margin: auto;\n    }\n\n    .readonly {\n        cursor: default;\n    }\n    .icons {\n        position: absolute;\n        z-index: 99999999;\n        top: 0;\n        left: 0;\n        width: 100%;\n        overflow-y: scroll;\n        height: 0;\n        transition: 0.4s;\n        padding: 0 20px;\n        box-sizing: border-box;\n        transition-timing-function: ease-in-out;\n        background-color: var(--background);\n    }\n\n    .icons.visible {\n        height: 100vh;\n    }\n\n    .icons img {\n        max-width: 40px;\n        max-height: 40px;\n        margin: 10px;\n        cursor: pointer;\n    }\n\n    .container {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        margin-top: 10px;\n        max-height: calc(100% - 50px);\n        overflow: hidden;\n        overflow-y: auto;\n        width: 90%;\n        margin: auto;\n        padding-top: 10px;\n    }\n\n    .container::after {\n        /* To align the last row to the left */\n        content: \"\";\n        flex: auto;\n    }\n\n    .search {\n        width: 100%;\n        position: sticky;\n        height: 60px;\n    }\n</style>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\n\texport let src = null;\n\tlet svgContent = '';\n\tonMount(async () => {\n\t\tsvgContent = localStorage.getItem('__data__' + src);\n\t\tif (svgContent) {\n\n\t\t} else {\n\t\t\tconst res = await fetch(src);\n\t\t\tsvgContent = await res.text();\n\t\t\tlocalStorage.setItem('__data__' + src, svgContent);\n\t\t}\n\t});\n</script>\n\n<div class=\"include\">{@html svgContent}</div>\n\n<style>\n\t.include {\n\t\tmax-height: 100%;\n\t\tmax-width: 100%;\n\t}\n\t.include :global(svg) {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tmargin: 0;\n\t}\n</style>\n",
    "<script>\n    import { Textfield, Icon } from 'svelte-mui';\n    import { createEventDispatcher } from 'svelte';\n    const dispatch = createEventDispatcher();\n\n    const maxLen = 8;\n    let password = '';\n\n    let wrongPassword = false;\n\n    $: svgValue = wrongPassword ? 0 : ((100 - 33) * (maxLen - Math.min(password.length, maxLen)) / maxLen + 33);\n    $: fillColor = wrongPassword ? 'var(--error-color)' : 'var(--accent)';\n\n    async function checkPassword () {\n        let response = await fetch('/login', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json;'},\n            body: JSON.stringify({login: 'admin', password: password})\n        })\n\n        if (response.ok) {\n            let response = await fetch('/open_folder');\n            let wallet = await response.json();\n            dispatch('open_wallet', wallet);\n        }\n\n        return response.ok;\n    }\n\n    async function unlock () {\n        if (!await checkPassword()) {\n            password = '';\n            wrongPassword = true;\n            let lockSvg = document.querySelector('svg');\n            lockSvg.classList.add('wrong_password');\n            setTimeout(() => {lockSvg.classList.remove('wrong_password')}, 1000);\n        }\n    }\n\n\n    function onKeyPress (e) {\n        if (wrongPassword) {\n            wrongPassword = false;\n        }\n\n\n        if (!e) e = window.event;\n        if ((e.keyCode || e.which) == 13) {\n            unlock();\n            return false;\n        }\n    }\n\n    checkPassword()\n</script>\n\n<div class=\"lock\" style=\"--lock-value: {svgValue}; --fill-color: {fillColor}\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"/>\n        <path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"/>\n    </svg>\n\n    <Textfield placeholder=\"Password\" bind:value={password} on:keypress={onKeyPress} type=\"password\" class=\"lockscreen_password\"/>\n</div>\n\n<style>\n    .lock {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        background-color: var(--background);\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n        justify-content: center;\n        align-items: center;\n    }\n\n    svg{\n        width: 250px;\n        height: 250px;\n        fill: none;\n\n    }\n\n    :global(svg.wrong_password) {\n        animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;\n    }\n\n    svg path{\n        stroke: var(--color);\n        stroke-width: 0.2px;\n        stroke-dasharray: 100px;\n        stroke-dashoffset: 0;\n        transition: 1s;\n    }\n\n    svg path:nth-child(2){\n        stroke: var(--fill-color);\n        stroke-dasharray: 100px;\n        stroke-dashoffset: var(--lock-value);\n    }\n\n    :global(.lockscreen_password) {\n        width: 200px!important;\n    }\n\n    :global(.lockscreen_password .focus-line),\n    :global(.lockscreen_password input) {\n        --primary: var(--fill-color)!important;\n        --accent: var(--fill-color)!important;\n    }\n\n    @keyframes shake {\n        10%, 90% {\n          transform: translate3d(-1px, 0, 0);\n        }\n\n        20%, 80% {\n          transform: translate3d(2px, 0, 0);\n        }\n\n        30%, 50%, 70% {\n          transform: translate3d(-4px, 0, 0);\n        }\n\n        40%, 60% {\n          transform: translate3d(4px, 0, 0);\n        }\n    }\n\n</style>\n",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\texport let visible = true;\n\n\tfunction hide () {\n\t\tvisible = false;\n\t\tdispatch('hide');\n\t}\n\n</script>\n\n<div class=\"menu\" on:click={hide} style={'--visible: ' + Number(visible)}/>\n<div class=\"container\" on:click|stopPropagation style={'--visible: ' + Number(visible)}>\n\t<slot/>\n</div>\n<style lang=\"less\">\n\t.menu {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t\tz-index: calc(999 * var(--visible) - 9);\n\t\tbackground-color: RGBA(0, 0, 0, 0.6);\n\t\toverflow: hidden;\n\t}\n\t.container {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: calc(-450px + (var(--visible) * 450px));\n\t\tz-index: 1000;\n\t\twidth: 450px;\n\t\theight: 100vh;\n\t\topacity: 100;\n\t\tbackground-color: var(--background);\n\t\ttransition: 0.8s;\n\t\toverflow: hidden;\n\t}\n</style>\n",
    "<script>\n    import { Textfield, Button, Icon, Menu, Menuitem } from 'svelte-mui';\n    import ChangePassword from './ChangePassword.svelte';\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    let searchText;\n    let modalVisible = false;\n\n</script>\n\n<div class=\"navbar\">\n    <div class=\"content\">\n        <ChangePassword bind:visible={modalVisible}/>\n\n        <Button on:click={() => dispatch('go_back')}>\n            <Icon path=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/>\n        </Button>\n\n        <Button on:click={() => dispatch('new_folder')}>\n            <Icon path=\"m26,23l0,-3l1,0l0,3l3,0l0,1l-3,0l0,3l-1,0l0,-3l-3,0l0,-1l3,0l0,0zm-4.40029,3l-19.60674,0c-0.54686,0 -0.99297,-0.44405 -0.99297,-0.9918l0,-11.0082l27,0l0,4.20703c-0.47683,-0.13486 -0.97999,-0.20703 -1.5,-0.20703c-3.03757,0 -5.5,2.46243 -5.5,5.5c0,0.90022 0.21628,1.74993 0.59971,2.5l0,0l0,0zm0.65745,1l-20.26387,0c-1.09358,0 -1.99329,-0.89147 -1.99329,-1.99115l0,-18.0177c0,-1.10148 0.89667,-1.99115 2.00276,-1.99115l10.99724,0l2,4l11.99414,0c1.1088,0 2.00586,0.89323 2.00586,1.99509l0,7.60462c1.78084,0.91036 3,2.76295 3,4.90029c0,3.03757 -2.46243,5.5 -5.5,5.5c-1.70794,0 -3.23405,-0.7785 -4.24284,-2l0,0l0,0zm-21.25716,-14l0,-6.0082c0,-0.53649 0.44401,-0.9918 0.99173,-0.9918l10.40829,0l1.95997,4l12.63703,0c0.54915,0 1.00298,0.44811 1.00298,1.00087l0,1.99913l-27,0l0,0l0,0zm25.5,15c2.48528,0 4.5,-2.01472 4.5,-4.5c0,-2.48528 -2.01472,-4.5 -4.5,-4.5c-2.48528,0 -4.5,2.01472 -4.5,4.5c0,2.48528 2.01472,4.5 4.5,4.5l0,0z\"/>\n        </Button>\n\n        <Button on:click={() => dispatch('lock')}>\n            <Icon path=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"/>\n        </Button>\n\n\n        <Textfield placeholder=\"Search\" on:input={() => {dispatch('search', searchText)}} bind:value={searchText}/>\n        <Menu>\n            <div slot=\"activator\">\n                <Button>\n                    <Icon>\n                        <svg fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"1\"/><circle cx=\"12\" cy=\"5\" r=\"1\"/><circle cx=\"12\" cy=\"19\" r=\"1\"/></svg>\n                    </Icon>\n                </Button>\n            </div>\n            <Menuitem on:click={() => {modalVisible = true}}>\n                <Button>\n                    Change password\n                    <Icon style=\"margin-left: 5px\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\">\n                            <path d=\"M618.9,438.7c35.8,0,64.8,31.6,64.8,70.7v164.9c0,39-29,70.7-64.8,70.7H381.3c-35.8,0-64.8-31.6-64.8-70.7V509.4c0-39,29-70.7,64.8-70.7h57.5l0,0h122.5l0,0H618.9z M499.5,500.2c-33.8,0-61.3,26.2-61.3,58.6c0,21.6,16.8,38.2,35,48.3v76.1h52.5v-76.1c18.3-10.2,35-26.7,35-48.3C560.8,526.4,533.4,500.2,499.5,500.2z M500,316.3c-57.6,0-61.1,48.4-61.3,61.3v61.1h-61.6v-55.2c0,0,0-128.6,122.7-128.6c122.7,0,122.7,128.6,122.7,128.6v55.2h-61.2v-61.1C561.1,365,557.6,316.3,500,316.3z M500,990.1c-270.6,0-490-219.4-490-490c0-270.6,219.4-490,490-490c87.2,0,169,22.9,240,62.9l45.6-63.1l81.6,214.5L653.2,193l50.5-69.9C643.1,90.3,573.8,71.4,500,71.4c-236.8,0-428.8,192-428.8,428.8c0,236.8,192,428.7,428.8,428.7c236.8,0,428.8-192,428.8-428.7c0-57.8-11.6-112.9-32.3-163.2l56.6-23.3c23.7,57.5,37,120.4,37,186.5C990,770.7,770.6,990.1,500,990.1z\"/>\n                        </svg>\n                    </Icon>\n                </Button>\n            </Menuitem>\n        </Menu>\n    </div>\n</div>\n\n<style>\n    .navbar {\n        color: var(--color);\n        background-color: var(--background);\n        height: 50px;\n        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n    }\n\n    .content {\n        width: 100%;\n        max-width: 600px;\n        height: 50px;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        align-items: center;\n        margin: auto;\n    }\n\n    .content :global(.text-field) {\n        max-width: 300px;\n    }\n\n</style>\n",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n    import { onMount } from 'svelte';\n\n    export let items;\n    export let dragging = false;\n\n    const dispatch = createEventDispatcher();\n\n    let actionsSlot;\n\n    function getElementIndex(element) {\n        // Return the index of the elemnt in its parent\n        return [].indexOf.call(element.parentNode.children, element);\n    }\n\n    function resetGrid () {\n        // trigger change event if there's no change\n        // to reset the list\n        let i = items;\n        items = [];\n        setTimeout(() => {\n            items = i;\n        });\n    }\n\n    let draggedElement = null;\n    let draggedIndex = -1;\n    let destIndex = -1;\n    let action = null;\n    let intoFolder = false;\n\n    let ghostElement = null;\n\n    // Position of the mouse on the dragged element\n    let xPosElement = 0;\n    let yPosElement = 0;\n\n    let mouseTimer = null;\n\n    function mouseDown (event) {\n        if (event.button !== 0 && !event.touches) {\n            return;\n        }\n        let target = event.currentTarget;\n\n        mouseTimer = setTimeout(() => {\n            dragging = true;\n\n            draggedElement = target;\n            draggedIndex = getElementIndex(draggedElement);\n\n            if (event.touches) {\n                // mobile\n                xPosElement = draggedElement.offsetWidth / 2;\n                yPosElement = draggedElement.offsetHeight / 2;\n            } else {\n                // desktop\n                xPosElement = event.x - draggedElement.offsetLeft;\n                yPosElement = event.y - draggedElement.offsetTop;\n            }\n\n            // move the element in absolute position\n            let x = draggedElement.offsetLeft;\n            let y = draggedElement.offsetTop;\n            draggedElement.classList.add('dragged');\n            draggedElement.style.setProperty('--x', x + 'px');\n            draggedElement.style.setProperty('--y', y + 'px');\n\n            // create a ghost element to fill the space\n            ghostElement = document.createElement('div');\n            ghostElement.style.width = draggedElement.offsetWidth + 'px';\n            ghostElement.style.height = draggedElement.offsetHeight + 'px';\n            ghostElement.setAttribute('class', 'ghost');\n            draggedElement.parentNode.insertBefore(ghostElement, draggedElement);\n\n            document.body.appendChild(draggedElement);\n        }, 100);\n    }\n\n    function mouseUp (event) {\n        if (mouseTimer) {\n            clearTimeout(mouseTimer);\n        }\n        if (!draggedElement || (event.button !== 0 && !event.touches)) {\n            return;\n        }\n\n        let draggedItem = items[draggedIndex];\n\n        if (action) {\n            dispatch('action', {\n                action: action,\n                item: draggedItem,\n            });\n        } else if (draggedIndex !== destIndex && destIndex >= 0 && draggedIndex >= 0) {\n            let destItem = items[destIndex];\n\n            if (!intoFolder) {\n                let item = items.splice(draggedIndex, 1)[0];\n                items.splice(destIndex, 0, item);\n            } else {\n                items.splice(draggedIndex, 1);\n            }\n\n            dispatch('move', {\n                from: draggedIndex,\n                to: destIndex,\n                fromItem: draggedItem,\n                intoFolder: intoFolder,\n                destItem: destItem,\n            });\n        }\n\n        // clean the state\n        ghostElement.remove();\n        draggedElement.classList.remove('dragged');\n        draggedElement = null;\n        draggedIndex = -1\n        destIndex = -1;\n        dragging = false;\n        action = null;\n        intoFolder = false;\n        let previousFolder = document.querySelector('.move_into');\n        if (previousFolder) {\n            previousFolder.classList.remove('move_into');\n        }\n        resetGrid();\n    }\n\n    function mouseMove (event) {\n        if (!draggedElement) {\n            return;\n        }\n\n        // move the dragged element to the mouse position\n        if (event.touches) {\n            // mobile\n            var mouseX = event.touches[0].clientX;\n            var mouseY = event.touches[0].clientY;\n        } else {\n            // desktop\n            var mouseX = event.x;\n            var mouseY = event.y;\n        }\n\n        draggedElement.style.setProperty('--x', (mouseX - xPosElement) + 'px');\n        draggedElement.style.setProperty('--y', (mouseY - yPosElement) + 'px');\n\n        // move the ghost element if necessary\n        let hoverElements = document.elementsFromPoint(mouseX, mouseY);\n\n        // check if will perform an action\n        let actionElement = hoverElements.filter(el => el.parentNode && el.parentNode.getAttribute && el.parentNode.getAttribute('slot') === 'actions');\n\n        if (actionElement.length) {\n            action = actionElement[0];\n            return;\n        }\n\n        // check if will move the item\n        let destItemsFiltered = hoverElements.filter(el => el.classList.contains('container'));\n        destItemsFiltered = destItemsFiltered.filter(el => el !== draggedElement);\n\n        if (destItemsFiltered.length) {\n            let destelement = destItemsFiltered[0];\n            destIndex = getElementIndex(destelement);\n\n            intoFolder = parseInt(destelement.getAttribute('folder'));\n\n            if (intoFolder) {\n                destelement.classList.add('move_into');\n            } else {\n                let previousFolder = document.querySelector('.move_into');\n                if (previousFolder) {\n                    previousFolder.classList.remove('move_into');\n                }\n\n                let ghostIndex = getElementIndex(ghostElement);\n                if (ghostIndex < destIndex) {\n                    destelement.parentNode.insertBefore(ghostElement, destelement.nextSibling);\n                } else {\n                    destelement.parentNode.insertBefore(ghostElement, destelement);\n                }\n            }\n        } else {\n            intoFolder = false;\n            destIndex = getElementIndex(ghostElement);\n            let previousFolder = document.querySelector('.move_into');\n            if (previousFolder) {\n                previousFolder.classList.remove('move_into');\n            }\n        }\n\n    }\n\n    window.addEventListener('mouseup', mouseUp);\n    window.addEventListener('touchend', mouseUp);\n\n    window.addEventListener('mousemove', mouseMove);\n    window.addEventListener('touchmove', mouseMove);\n\n</script>\n\n<div class=\"grid\">\n    <div class=\"actions\" bind:this={actionsSlot}>\n        <slot name=\"actions\">\n            <!-- Actions when items are dropped on the elements -->\n        </slot>\n    </div>\n    <div class=\"items\">\n        {#each items as item, index (item)}\n        <div class=\"container\" folder={item.folder || 0}\n             on:mousedown={mouseDown}\n             on:touchstart={mouseDown}>\n            <slot name=\"item\" class=\"item\" {item} {index}/>\n        </div>\n        {/each}\n    </div>\n</div>\n<style>\n    .grid {\n        overflow-x: hidden;\n        overflow-y: auto;\n        max-height: 100%;\n    }\n\n    .items {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: space-around;\n        align-items: flex-start;\n        align-content: flex-start;\n    }\n\n    .container {\n        width: auto;\n        display: block;\n        transition: -webkit-filter 0.5s;\n    }\n\n    .container > * {\n        width: auto;\n        display: block;\n        cursor: pointer;\n    }\n\n    :global(.dragged) {\n        position: absolute;\n        left: var(--x);\n        top: var(--y);\n        opacity: 0.2;\n        transform: rotate(-3deg);\n    }\n\n    :global(.ghost) {\n        opacity: 0;\n    }\n\n    :global(.move_into) {\n        -webkit-filter: brightness(50%);\n    }\n\n</style>\n",
    "<script>\n    import { Button, Icon, Sidepanel } from 'svelte-mui';\n    import Account from './Account.svelte';\n    import AccountEditor from './AccountEditor.svelte';\n    import Navbar from './Navbar.svelte';\n    import Menu from './Menu.svelte';\n    import Sortablegrid from './Sortablegrid.svelte';\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let wallet = [];\n\n    let currentFolderId = 0;\n    let activeAccountIndex = null;\n    let accountEditor;\n    let dragging;\n\n    let menuVisible = false;\n\n    $: menuHideTrigger = menuVisible ? '' : closeMenu();\n\n    function closeMenu () {\n        menuVisible = false;\n        activeAccountIndex = null;\n        if (accountEditor)\n            accountEditor.reset();\n    }\n\n    function computePasswordStrength (account) {\n        // Todo: better function\n        account.force = account.password.length * 10;\n        return account;\n    }\n\n    async function moveAccount (event) {\n        let response = await fetch('/move_account', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json;'},\n            body: JSON.stringify({\n                account_id: event.detail.fromItem.id,\n                new_index: event.detail.to,\n                into_folder: event.detail.intoFolder,\n                dest_account_id: event.detail.destItem.id,\n            })\n        })\n\n        if (!response.ok) {\n            dispatch('lock');\n        } else {\n            openFolder(currentFolderId);\n        }\n    }\n\n    function clickAccount (account) {\n        if (account.folder) {\n            openFolder(account.id);\n        } else {\n            editAccount(account);\n        }\n    }\n\n    function editAccount (account, read=true) {\n        activeAccountIndex = wallet.findIndex(a => a.id === account.id);\n\n        accountEditor.editAccount(wallet[activeAccountIndex], read);\n        menuVisible = true;\n    }\n\n    function newAccount () {\n        activeAccountIndex = -1;\n        accountEditor.newAccount({\n            folder_id: currentFolderId,\n            icon: 'img/account_default.svg',\n        });\n        menuVisible = true;\n    }\n\n    async function saveAccount (event) {\n        let response = await fetch('/save_account', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json;'},\n            body: JSON.stringify(event.detail.account)\n        })\n\n        if (response.ok) {\n            let account = computePasswordStrength(await response.json())\n            if (activeAccountIndex < 0) {\n                // new account\n                wallet = wallet.concat(account);\n            } else {\n                // write on existing account\n                wallet[activeAccountIndex] = account;\n            }\n        } else {\n            dispatch('lock');\n        }\n    }\n\n    async function removeAccount (event) {\n        let response = await fetch('/remove_account', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json;'},\n            body: JSON.stringify(event.detail.account)\n        })\n        if (response.ok) {\n            wallet = wallet.filter((account) => {\n                return account.id !== event.detail.account.id\n            });\n            closeMenu();\n        } else {\n            dispatch('lock');\n        }\n    }\n\n    export async function openFolder(folderId) {\n        let response = await fetch('/open_folder?id=' + encodeURIComponent(folderId || 0));\n        if (response.ok) {\n            currentFolderId = folderId;\n            document.cookie = \"currentFolderId=\" + folderId;\n\n            let accounts = await response.json();\n            for (let account of accounts) {\n                account = computePasswordStrength(account);\n            }\n            wallet = accounts;\n        }\n    }\n\n    async function goBack() {\n        let response = await fetch('/account/' + encodeURIComponent(currentFolderId || 0));\n\n        if (response.ok) {\n            let folder = await response.json();\n            await openFolder(folder.folder_id);\n        }\n    }\n\n    async function search (event) {\n        if (!event.detail) {\n            openFolder(currentFolderId);\n            return;\n        }\n\n        let response = await fetch('/search?q=' + encodeURIComponent(event.detail));\n        if (response.ok) {\n            wallet = await response.json();\n        }\n    }\n\n    async function newFolder () {\n        let folder = {\n            name: 'Folder',\n            icon: 'img/folder.svg',\n            folder: 1,\n            folder_id: currentFolderId,\n        }\n        wallet = wallet.concat(folder);\n        await saveFolder(folder);\n    }\n\n    async function saveFolder (folder) {\n        await saveAccount({detail: {account: folder}});\n    }\n\n    async function accountAction (event) {\n        let action = event.detail.action.classList.contains('parent_folder_action') ? 'parent' : 'edit';\n        let account = event.detail.item;\n\n        if (action === 'parent') {\n            let response = await fetch('/move_up', {\n                method: 'post',\n                headers: {'Content-Type': 'application/json;'},\n                body: JSON.stringify({account_id: account.id}),\n            })\n\n            if (response.ok) {\n                await openFolder(currentFolderId);\n            }\n        } else if (action === 'edit') {\n            editAccount(account, false);\n        }\n    }\n\n</script>\n\n<Sidepanel bind:visible={menuVisible}>\n    <AccountEditor bind:this={accountEditor} on:save_account={saveAccount} on:remove_account={removeAccount}/>\n</Sidepanel>\n<Navbar on:lock on:search={search} on:new_folder={newFolder} on:go_back={goBack}/>\n<div class=\"wallet\">\n    <Sortablegrid on:move={moveAccount} on:action={accountAction} bind:items={wallet} let:item let:index bind:dragging={dragging}>\n        <div slot=\"actions\" class=\"actions {dragging ? 'visible' : ''}\">\n            <Button class=\"parent_folder_action\" raised icon>\n                <Icon>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"><polyline points=\"3.41 16.34 12.1 7.66 20.59 16.14\"/></svg>\n                </Icon>\n            </Button>\n            <Button class=\"edit_account_action\" raised icon>\n                <Icon>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n                </Icon>\n            </Button>\n        </div>\n        <div slot=\"item\">\n            <Account account={item} on:click={() => clickAccount(item)} on:save_folder={() => {saveFolder(item)}}/>\n        </div>\n    </Sortablegrid>\n    <Button class=\"new_account {dragging ? '' : 'visible'}\" raised icon on:click={newAccount}>\n        <Icon path=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n    </Button>\n</div>\n\n\n<style lang=\"less\">\n    .wallet {\n        height: calc(100vh - 50px);\n        background-color: var(--wallet-background);\n    }\n    .actions {\n        position: absolute;\n        z-index: 999;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        left: -50px;\n        bottom: 20px;\n        height: 120px;\n        width: 50px;\n        background: transparent;\n        transition: 0.5s cubic-bezier(.47,1.64,.41,.8);\n    }\n\n    .actions.visible {\n        left: 20px;\n    }\n\n    .actions :global(.button) {\n        position: initial;\n    }\n\n    :global(.new_account) {\n        position: absolute!important;\n        bottom: -50px;\n        right: -50px;\n        transition: 0.5s cubic-bezier(.47,1.64,.41,.8);\n    }\n\n    :global(.new_account).visible {\n        bottom: 20px;\n        right: 20px;\n    }\n\n    :global(.side-panel) {\n        width: 350px!important;\n        --bg-color: var(--background)!important;\n    }\n\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}